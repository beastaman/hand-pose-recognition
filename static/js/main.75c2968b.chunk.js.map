{"version":3,"sources":["reportWebVitals.js","components/utilities.js","components/Layout.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","fingerJoints","thumb","indexFinger","middleFinger","ringFinger","pinky","style","color","size","drawHand","predictions","ctx","length","forEach","prediction","landmarks","j","Object","keys","finger","k","firstJointIndex","secondJointIndex","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","i","x","y","arc","Math","PI","fillStyle","fill","App","webcamRef","useRef","canvasRef","runHandpose","a","handpose","net","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","estimateHands","hand","getContext","id","className","ref","class","href","ReactDOM","render","StrictMode","Layout","document","getElementById"],"mappings":"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","file":"static/js/main.75c2968b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// Points for fingers\r\nconst fingerJoints = {\r\n  thumb: [0, 1, 2, 3, 4],\r\n  indexFinger: [0, 5, 6, 7, 8],\r\n  middleFinger: [0, 9, 10, 11, 12],\r\n  ringFinger: [0, 13, 14, 15, 16],\r\n  pinky: [0, 17, 18, 19, 20],\r\n};\r\n\r\n// Infinity Gauntlet Style\r\nconst style = {\r\n  0: { color: \"yellow\", size: 15 },\r\n  1: { color: \"gold\", size: 6 },\r\n  2: { color: \"green\", size: 10 },\r\n  3: { color: \"gold\", size: 6 },\r\n  4: { color: \"gold\", size: 6 },\r\n  5: { color: \"purple\", size: 10 },\r\n  6: { color: \"gold\", size: 6 },\r\n  7: { color: \"gold\", size: 6 },\r\n  8: { color: \"gold\", size: 6 },\r\n  9: { color: \"blue\", size: 10 },\r\n  10: { color: \"gold\", size: 6 },\r\n  11: { color: \"gold\", size: 6 },\r\n  12: { color: \"gold\", size: 6 },\r\n  13: { color: \"red\", size: 10 },\r\n  14: { color: \"gold\", size: 6 },\r\n  15: { color: \"gold\", size: 6 },\r\n  16: { color: \"gold\", size: 6 },\r\n  17: { color: \"orange\", size: 10 },\r\n  18: { color: \"gold\", size: 6 },\r\n  19: { color: \"gold\", size: 6 },\r\n  20: { color: \"gold\", size: 6 },\r\n};\r\n\r\n// Drawing function\r\nexport const drawHand = (predictions, ctx) => {\r\n  // Check if we have predictions\r\n  if (predictions.length > 0) {\r\n    // Loop through each prediction\r\n    predictions.forEach((prediction) => {\r\n      // Grab landmarks\r\n      const landmarks = prediction.landmarks;\r\n\r\n      // Loop through fingers\r\n      for (let j = 0; j < Object.keys(fingerJoints).length; j++) {\r\n        let finger = Object.keys(fingerJoints)[j];\r\n        //  Loop through pairs of joints\r\n        for (let k = 0; k < fingerJoints[finger].length - 1; k++) {\r\n          // Get pairs of joints\r\n          const firstJointIndex = fingerJoints[finger][k];\r\n          const secondJointIndex = fingerJoints[finger][k + 1];\r\n\r\n          // Draw path\r\n          ctx.beginPath();\r\n          ctx.moveTo(\r\n            landmarks[firstJointIndex][0],\r\n            landmarks[firstJointIndex][1]\r\n          );\r\n          ctx.lineTo(\r\n            landmarks[secondJointIndex][0],\r\n            landmarks[secondJointIndex][1]\r\n          );\r\n          ctx.strokeStyle = \"plum\";\r\n          ctx.lineWidth = 4;\r\n          ctx.stroke();\r\n        }\r\n      }\r\n\r\n      // Loop through landmarks and draw em\r\n      for (let i = 0; i < landmarks.length; i++) {\r\n        // Get x point\r\n        const x = landmarks[i][0];\r\n        // Get y point\r\n        const y = landmarks[i][1];\r\n        // Start drawing\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, style[i][\"size\"], 0, 3 * Math.PI);\r\n\r\n        // Set line color\r\n        ctx.fillStyle = style[i][\"color\"];\r\n        ctx.fill();\r\n      }\r\n    });\r\n  }\r\n};\r\n","// 1. Install dependencies DONE\r\n// 2. Import dependencies DONE\r\n// 3. Setup webcam and canvas DONE\r\n// 4. Define references to those DONE\r\n// 5. Load handpose DONE\r\n// 6. Detect function DONE\r\n// 7. Drawing utilities DONE\r\n// 8. Draw functions DONE\r\n\r\nimport React, { useRef } from \"react\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as handpose from \"@tensorflow-models/handpose\";\r\nimport Webcam from \"react-webcam\";\r\nimport { drawHand } from \"./utilities\";\r\n\r\nfunction App() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const runHandpose = async () => {\r\n    const net = await handpose.load();\r\n    console.log(\"Handpose model loaded.\");\r\n    //  Loop and detect hands\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 100);\r\n  };\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // Make Detections\r\n      const hand = await net.estimateHands(video);\r\n      console.log(hand);\r\n\r\n      // Draw mesh\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      drawHand(hand, ctx);\r\n    }\r\n  };\r\n\r\n  runHandpose();\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      <div className=\"recognition-wrapper\">\r\n        <Webcam ref={webcamRef} />\r\n\r\n        <canvas ref={canvasRef} />\r\n      </div>\r\n\r\n      <div className=\"box-content\">\r\n        <h1>Hand pose recognition</h1>\r\n        <div className=\"dots-wrapper\">\r\n          <div class=\"hollow-dots-spinner\">\r\n            <div class=\"dot\"></div>\r\n            <div class=\"dot\"></div>\r\n            <div class=\"dot\"></div>\r\n          </div>\r\n        </div>\r\n        <a href=\"https://beastaman.github.io/myweb/\" class=\"button-link alternative\">\r\n          Contact me\r\n        </a>\r\n        <div className=\"details-wrapper\">\r\n          <p>\r\n            Designed & Developed by <span>Beast Aman</span>\r\n          </p>\r\n          <p>\r\n            All rights reserved <span>2021</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport Layout from \"./components/Layout\";\r\n\r\nimport \"./sass/reset.css\";\r\nimport \"./sass/index.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Layout />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}